# See also Mastodon in AUR

developer=https://github.com/mastodon/mastodon
url=${developer}
maintainer=http://indiecomputing.com/
pkgname=$(basename $(pwd))
pkgver=4.2.5
# When updating this, also update the node version in mastodon-streaming@.service
pkgrel=2
pkgdesc="Your self-hosted, globally interconnected microblogging community"
arch=('any')
license=("AGPL3")
source=("${pkgname}-v${pkgver}.tar.gz::https://github.com/mastodon/mastodon/archive/v${pkgver}.tar.gz")
releasepage=('https://github.com/mastodon/mastodon/releases')
depends=(
    'ffmpeg'
    'imagemagick'
    'libidn'
    'libpqxx'
    'libxml2'
    'libxslt'
    'libyaml'
    'nodejs'
    'postgresql'
    'protobuf'
    'redis'
    'ruby-bundler'
    'zlib'
)
makedepends=(
    'gcc'
    'git'
    'make'
    'nvm'
    'npm'
    'python'
    'yarn'
)
options=('!strip')
install=install
sha512sums=('c594178010c296b581531d6e35887214441d6f1f44083578dbb38a3beeb64d968a171cba0a9335e8f8b27b45e957508ab3168ec0056b423bf8fb44abd0f5f6d5')

# Use NVM
# Note: NVM_DIR must be an absolute path name without a trailing slash, otherwise
# you get some error message about "not compatible ... 'prefix' option" (don't ask me)
NODE_VERSION="--lts=iron"

prepare() {
    export NVM_DIR=${srcdir}/${pkgname}-${pkgver}/nvm
    source /usr/share/nvm/init-nvm.sh

    nvm install ${NODE_VERSION}

    cd ${srcdir}/${pkgname}-${pkgver}

    corepack enable
    yarn set version classic
}

build() {
    cd ${srcdir}/${pkgname}-${pkgver}

    sed -i '/husky install/d' package.json # Stop husky from hijacking git hooks

    export NVM_DIR=$(pwd)/nvm

    bundle config set --local path 'vendor/bundle'
    bundle config deployment 'true'
    bundle config without 'development test'
    bundle install -j$(getconf _NPROCESSORS_ONLN)

    yarn install --pure-lockfile

    # We need this here otherwise asset precompilation fails. However, we need to
    # change this before deploying to something instance-specific
    deviseSecretKey=$(perl -MUBOS::Utils -e 'print UBOS::Utils::randomHex(64);')
    perl -pi -e "s!^(\s*)#\s*(config\.secret_key\s*=\s*).*\$!\1\2'$deviseSecretKey'!" config/initializers/devise.rb

    echo Running bundle exec rails assets:precompile
    RAILS_ENV=production \
    NODE_ENV=production \
    RAILS_SERVE_STATIC_FILES=true \
    OTP_SECRET=precompile_placeholder \
    SECRET_KEY_BASE=precompile_placeholder \
    bundle exec rails assets:precompile

    # Those OTP_SECRET and SECRET_KEY_BASE are from the Dockerfile

    # Make a few changes
    perl -pi -e "s!cache_dir:.*\$!cache_dir: '/var/cache/' + ENV['APPCONFIGID'],!" config/boot.rb

    # Don't do this, it has interactive prompts generating the .env.production file
    # APPCONFIGID=appconfigid_placeholder RAILS_ENV=production bundle exec rake mastodon:setup
}

package() {
# Manifest
    install -D -m0644 ${startdir}/ubos-manifest.json ${pkgdir}/ubos/lib/ubos/manifests/${pkgname}.json

# Icons
    install -D -m0644 ${startdir}/appicons/{72x72,144x144}.png -t ${pkgdir}/ubos/http/_appicons/${pkgname}/

# Templates
    install -D -m0644 ${startdir}/tmpl/*.tmpl -t ${pkgdir}/ubos/share/${pkgname}/tmpl/

# Config files
    mkdir -p ${pkgdir}/etc/${pkgname}

# Systemd
    install -D -m0644 ${startdir}/systemd/*.{service,target} -t ${pkgdir}/usr/lib/systemd/system/
    install -D -m0644 ${startdir}/sysusers.d/mastodon.conf   -t ${pkgdir}/usr/lib/sysusers.d/

# Data
    mkdir -p ${pkgdir}/ubos/lib/${pkgname}

# Cache
    mkdir -p ${pkgdir}/var/cache/mastodon

# Code
    install -D -m0755 ${startdir}/bin/* -t ${pkgdir}/ubos/share/${pkgname}/bin/
    mkdir -p ${pkgdir}/ubos/share/${pkgname}/mastodon
    cp -a ${srcdir}/${pkgname}-${pkgver}/*       ${pkgdir}/ubos/share/${pkgname}/mastodon/
    cp -a ${srcdir}/${pkgname}-${pkgver}/.bundle ${pkgdir}/ubos/share/${pkgname}/mastodon/

# Add UBOS rake tasks
    install -m644 ${startdir}/ubos.rake ${pkgdir}/ubos/share/${pkgname}/mastodon/lib/tasks/ubos.rake

# Remove unnecessary build output files
    rm -r $(find ${pkgdir} -name mkmf.log -or -name gem_make.out -or -name .git -or -name .cache ) ${pkgdir}/ubos/share/mastodon/mastodon/tmp
}
